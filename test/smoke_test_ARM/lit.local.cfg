# -*- Python -*-

# Check if ARM target is part of LLVM and tools build
if not 'ARM' in config.targets_to_build:
    config.unsupported = True
else:
    config.suffixes = ['.c']
    if 'linux' == sys.platform:
        config.substitutions.extend((
            ('%cparams', "-target arm-linux-gnu"),
            ('%mparams', ""),
            ('%run-elf', "")
        ))
    elif 'darwin' == sys.platform:
        TOOLCHAIN = 'ARM_TOOLCHAIN'

        env = os.environ.get(TOOLCHAIN)
        if env is not None and env != "":
            # define toolchain substitution
            common_params = f"-target arm-linux-gnueabihf --sysroot { os.environ.get(TOOLCHAIN) }"
            config.substitutions.extend((
                ('%cparams', f"{ common_params } -no-pie -fuse-ld=lld"),
                ('%mparams', common_params),
                ('%run-elf', f"{ os.path.dirname(__file__) }/run-elf-arm.sh")
            ))
        else:
            print(f"!! environment { TOOLCHAIN } not defined - compilation for ARM target not available !!\n"
                  "minimal prepared toolchain in the https://github.com/sv99/llvm-mctoll-toolchains")
            config.unsupported = True
