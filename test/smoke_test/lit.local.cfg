# -*- Python -*-
from lit.llvm import llvm_config

config.suffixes = ['.c']

if 'linux' == sys.platform:
    config.substitutions.extend((
        ('%cparams', ""),
        ('%mparams', ""),
        ('%run-elf', "")
    ))
elif 'darwin' == sys.platform:
    llvm_config.with_system_environment(
        ['SDKROOT'])

    # on osx for compiling elf binary need linux toolchain
    # for more information https://github.com/microsoft/llvm-mctoll/blob/master/doc/sysroot_flag.md
    TOOLCHAIN = 'LINUX_TOOLCHAIN'

    env = os.environ.get(TOOLCHAIN)
    if env is not None and env != "":
        config.suffixes = ['.c']
        # define clang params for build linux binary
        common_params = f"-target x86_64-linux-gnu --sysroot { os.environ.get(TOOLCHAIN) }"
        config.substitutions.extend((
            ('%cparams', f"{ common_params } -no-pie -fuse-ld=lld"),
            ('%mparams', common_params),
            ('%run-elf', f"{ os.path.dirname(__file__) }/run-elf-x86_64.sh")
        ))
    else:
        print(f"!! environment { TOOLCHAIN } not defined - compilation for Linux target not available !!\n"
              "minimal prepared toolchain in the https://github.com/sv99/llvm-mctoll-toolchains\n"
              "test/smoke_test disabled")
        config.unsupported = True
